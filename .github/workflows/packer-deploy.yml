name: Packer - Deploy

on:
  push:
  #   branches:
  #     - master
  #   paths:
  #     - packer/**
  #     - ansible/**
  # schedule:
  #   - cron: 0 16 * * 1 # Every Monday at 4pm UTC

jobs:
  validate:
    runs-on: ubuntu-latest
    container: lingrino/ci:latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@master
        with:
          fetch-depth: 1
      - name: Ansible Lint
        run: ansible-lint ansible/**
      - name: Packer Validate
        run: packer validate infra.json
        working-directory: ./packer
  deploy:
    needs: validate
    runs-on: ubuntu-latest
    container: lingrino/ci:latest
    strategy:
      matrix:
        account-id: ["038361916180", "840856573771"]
      fail-fast: false
    steps:
      - name: Checkout Code
        uses: actions/checkout@master
        with:
          fetch-depth: 1
      - name: AWS Assume Role
        run: |
          role=$(aws sts assume-role --role-arn "arn:aws:iam::${{ matrix.account-id }}:role/ServiceAdmin" --role-session-name "GitHubActions")
          echo "export AWS_ACCESS_KEY_ID=$(jq -r .Credentials.AccessKeyId <<<$role)" > ${HOME}/assume.sh
          echo "export AWS_SECRET_ACCESS_KEY=$(jq -r .Credentials.SecretAccessKey <<<$role)" >> ${HOME}/assume.sh
          echo "export AWS_SESSION_TOKEN=$(jq -r .Credentials.SessionToken <<<$role)" >> ${HOME}/assume.sh
        shell: bash
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID_USER }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY_USER }}
      - name: Packer Build
        run: |
          eval "$(cat ${HOME}/assume.sh)"
          packer build -except=docker-selfhosted,docker-wireguard infra.json
        working-directory: ./packer
