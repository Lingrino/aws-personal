name: Serverless - Deploy

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - serverless/**
  schedule:
    - cron: 0 16 * * 1 # Every Monday at 4pm UTC

jobs:
  validate:
    runs-on: ubuntu-latest
    container: lingrino/ci:latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
        with:
          fetch-depth: 1
      - name: Go Format
        run: test -z $(gofmt -l -w -s ./...)
      - name: GolangCI Lint
        run: for d in ./*/ ; do (cd "$d" && golangci-lint run); done
        working-directory: ./serverless
  deploy-snsnotifier:
    needs: validate
    runs-on: ubuntu-latest
    container: lingrino/ci:latest
    strategy:
      matrix:
        account-id: ["418875065733"]
      fail-fast: false
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
        with:
          fetch-depth: 1
      - name: AWS Assume Role
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: us-east-1
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_USER }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_USER }}
          role-to-assume: arn:aws:iam::${{ matrix.account-id }}:role/ServiceAdmin
          role-session-name: GitHubActions
          role-duration-seconds: 1800
      - name: Deploy SNS Notifier
        run: |
          eval "$(cat "${HOME}"/assume.sh)"
          make deploy
        working-directory: ./serverless/sns-notifier
  deploy-amicleaner:
    needs: validate
    runs-on: ubuntu-latest
    container: lingrino/ci:latest
    strategy:
      matrix:
        account-id: ["418875065733", "038361916180", "840856573771"]
      fail-fast: false
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
        with:
          fetch-depth: 1
      - name: AWS Assume Role
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: us-east-1
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_USER }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_USER }}
          role-to-assume: arn:aws:iam::${{ matrix.account-id }}:role/ServiceAdmin
          role-session-name: GitHubActions
          role-duration-seconds: 1800
      - name: Deploy AMI Cleaner
        run: |
          eval "$(cat "${HOME}"/assume.sh)"
          make deploy
        working-directory: ./serverless/ami-cleaner
