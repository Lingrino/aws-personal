# https://github.com/afpacket/ansible-role-image-cleanup
# https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/building-shared-amis.html
# https://aws.amazon.com/articles/how-to-share-and-use-public-amis-in-a-secure-manner/
# https://aws.amazon.com/articles/public-ami-publishing-hardening-and-clean-up-requirements/

- name: Gather package facts
  package_facts:
    manager: auto

- name: Stop services
  service:
    name: "{{ item }}"
    state: stopped
  loop:
    - amazon-cloudwatch-agent
    - auditd
    - rsyslog
    - systemd-journald

- name: Find cloudwatch agent state files
  find:
    paths:
      - /opt/aws/amazon-cloudwatch-agent/logs/state
    recurse: no
    file_type: file
  register: R_cwa_state_files

- name: Delete cloudwatch agent state files
  file:
    path: "{{ item.path }}"
    state: absent
  loop: "{{ R_cwa_state_files.files }}"
  when:
    - R_cwa_state_files.files != []

- name: Delete cloudwatch agent config and log files
  file:
    path: "{{ item }}"
    state: absent
  loop:
    - /opt/aws/amazon-cloudwatch-agent/etc/amazon-cloudwatch-agent.toml
    - /opt/aws/amazon-cloudwatch-agent/etc/log-config.json
    - /opt/aws/amazon-cloudwatch-agent/logs/amazon-cloudwatch-agent.log

- name: Cleanup apt cache
  apt:
    autoclean: true
    autoremove: true

- name: Find all ssh key files
  find:
    paths:
      - /etc/ssh
    patterns:
      - "*_key"
      - "*_key.pub"
    hidden: true
  register: R_cleanup_ssh_files

- name: Delete all ssh keys
  file:
    path: "{{ item.path }}"
    state: absent
  loop: "{{ R_cleanup_ssh_files.files }}"
  when:
    - R_cleanup_ssh_files.files != []

- name: Remove authorized keys
  file:
    path: "{{ item }}"
    state: absent
  loop:
    - /root/.ssh/authorized_keys
    - /home/ubuntu/.ssh/authorized_keys

- name: Clean cloud-init
  command: cloud-init clean
  when: cloud-init in ansible_facts.packages

- name: Clear journalctl
  command: journalctl --vacuum-size=0M
  when: ansible_service_mgr == "systemd"

- name: Find all log files
  find:
    paths:
      - /var/log
    hidden: true
    recurse: true
  register: R_cleanup_log_files

- name: Truncate all log files
  command: truncate -s0 "{{ item.path }}"
  loop: "{{ R_cleanup_log_files.files }}"
  when:
    - R_cleanup_log_files.files != []

- name: Truncate machine id
  command: truncate -s0 /etc/machine-id

- name: Find all history files
  find:
    paths:
      - /root
      - /home/ubuntu
    patterns:
      - ".*history"
    hidden: true
  register: R_cleanup_history_files

- name: Delete all history files
  file:
    path: "{{ item.path }}"
    state: absent
  loop: "{{ R_cleanup_history_files.files }}"

- name: Clear history
  shell: history -c && history -w
  args:
    executable: /bin/bash
  register: R_clear_history
  changed_when: R_clear_history.rc >= 0
